/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmMostruario.java
 *
 * Created on Sep 10, 2011, 3:32:16 PM
 */
package view;

import controller.ManterMostruarioController;
import controller.ManterProdutoController;
import controller.ManterRevendedoraController;
import java.awt.Component;
import java.sql.SQLException;
import java.util.Observable;
import java.util.Observer;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableRowSorter;
import model.Mostruario;
import tablemodel.MostruarioTableModel;
import util.ExportExcel;

/**
 *
 * @author Vitor Freitas
 */
public class FrmPanelMostruario extends javax.swing.JPanel implements Observer{
    private MostruarioTableModel model;
    
    private static final ImageIcon concluido
        = new ImageIcon(FrmPanelMostruario.class.getResource("/images/bullet_green.png"));
    private static final ImageIcon pendente
        = new ImageIcon(FrmPanelMostruario.class.getResource("/images/bullet_blue.png"));    
    private static final ImageIcon aberto
        = new ImageIcon(FrmPanelMostruario.class.getResource("/images/bullet_yellow.png"));     
    private static final ImageIcon atrasado
        = new ImageIcon(FrmPanelMostruario.class.getResource("/images/bullet_red.png"));  
    
    private TableRowSorter<MostruarioTableModel> sorter;
    
    /** Creates new form frmMostruario */
    public FrmPanelMostruario() {
        initComponents();
        ManterMostruarioController.getInstance().addObserver(this);
        ManterProdutoController.getInstance().addObserver(this);
        ManterRevendedoraController.getInstance().addObserver(this);
        
        tblMostruarios.setRowHeight(20);
        tblMostruarios.getColumn("Status").setCellRenderer(createStatusColumnRenderer());
        
        sorter = new TableRowSorter<MostruarioTableModel>(model);
        tblMostruarios.setRowSorter(sorter);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitleMostruario = new javax.swing.JLabel();
        btnNovo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMostruarios = new javax.swing.JTable();
        btnDetalhes = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnFecharPedido = new javax.swing.JButton();
        ckExibirTudo = new javax.swing.JCheckBox();
        btnRomaneio = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        lbTitleMostruario.setFont(new java.awt.Font("Tahoma", 1, 18));
        lbTitleMostruario.setForeground(new java.awt.Color(51, 51, 51));
        lbTitleMostruario.setText("Mostruários");

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        tblMostruarios.setModel(new MostruarioTableModel());
        addMostruarios();
        tblMostruarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMostruariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMostruarios);

        btnDetalhes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/find.png"))); // NOI18N
        btnDetalhes.setText("Detalhes");
        btnDetalhes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetalhesActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cross.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnFecharPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/money_dollar.png"))); // NOI18N
        btnFecharPedido.setText("Fechar");
        btnFecharPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharPedidoActionPerformed(evt);
            }
        });

        ckExibirTudo.setText("Exibir tudo");
        ckExibirTudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckExibirTudoActionPerformed(evt);
            }
        });

        btnRomaneio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/page_white_text.png"))); // NOI18N
        btnRomaneio.setText("Romaneio");
        btnRomaneio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRomaneioActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bullet_red.png"))); // NOI18N
        jLabel1.setText("Atrasado");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bullet_yellow.png"))); // NOI18N
        jLabel2.setText("Em Aberto");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bullet_green.png"))); // NOI18N
        jLabel3.setText("Concluído");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bullet_blue.png"))); // NOI18N
        jLabel4.setText("Pendente Pgto.");

        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });

        jLabel5.setText("Filtro:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 669, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(ckExibirTudo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbTitleMostruario)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                                .addComponent(btnExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRomaneio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFecharPedido))
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFiltro, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnDetalhes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNovo)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTitleMostruario)
                    .addComponent(btnNovo)
                    .addComponent(btnDetalhes)
                    .addComponent(btnExcluir)
                    .addComponent(btnFecharPedido)
                    .addComponent(btnRomaneio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckExibirTudo)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addMostruario(Mostruario mostruario) throws Exception{
        getModel().addMostruario(mostruario);
    }
    
    private void addMostruarios(){
        try{
            getModel().limpar();
            getModel().addListaDeMostruarios(ManterMostruarioController.getInstance().listarMostruarios(ckExibirTudo.isSelected()));
        } catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }
    
    private JTable getTblMostruario() {
            if (tblMostruarios == null) {
                    tblMostruarios = new JTable();
                    tblMostruarios.setModel(new MostruarioTableModel());
            }
            return tblMostruarios;
    }

    private MostruarioTableModel getModel() {
            if (model == null) {
                    model = (MostruarioTableModel) getTblMostruario().getModel();
            }
            return model;
    }
    
    
    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        new FrmManterMostruario(null, true, null).setVisible(true);
    }//GEN-LAST:event_btnNovoActionPerformed

    private void ckExibirTudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckExibirTudoActionPerformed
        addMostruarios();
    }//GEN-LAST:event_ckExibirTudoActionPerformed

    private void exibirDetalhes() {
        if (tblMostruarios.getSelectedColumn()!=-1&&tblMostruarios.getSelectedRow()!=-1){
            int modelRow = tblMostruarios.convertRowIndexToModel(tblMostruarios.getSelectedRow());
            Mostruario mostruario = new Mostruario();
            mostruario = (getModel().getMostruario(modelRow));     
            if (mostruario.getStatus()==0)
                new FrmManterMostruario(null, true, mostruario).setVisible(true);
            else
                new FrmFecharMostruario(null, true, mostruario, "Detalhes Mostruário").setVisible(true);
        }
        else
            JOptionPane.showMessageDialog(null, "Nenhuma linha foi selecionada.");    
    }
    private void btnDetalhesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetalhesActionPerformed
        exibirDetalhes();
    }//GEN-LAST:event_btnDetalhesActionPerformed

    private void btnRomaneioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRomaneioActionPerformed
        if (tblMostruarios.getSelectedColumn()!=-1&&tblMostruarios.getSelectedRow()!=-1){
            int modelRow = tblMostruarios.convertRowIndexToModel(tblMostruarios.getSelectedRow());
            Mostruario mostruario = new Mostruario();
            mostruario = (getModel().getMostruario(modelRow));     
            //new ImprimirRomaneio(null, true, mostruario).setVisible(true);
            try {
                ExportExcel.WriteFile(mostruario, ManterMostruarioController.getInstance().listarProdutosMostruario(mostruario.getId()));
                Process proc = Runtime.getRuntime().exec("cmd /c start romaneio.xls");
            } catch (Exception e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }            
        }
        else
            JOptionPane.showMessageDialog(null, "Nenhuma linha foi selecionada.");        
    }//GEN-LAST:event_btnRomaneioActionPerformed

    private void btnFecharPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharPedidoActionPerformed
        if (tblMostruarios.getSelectedColumn()!=-1&&tblMostruarios.getSelectedRow()!=-1){
            int modelRow = tblMostruarios.convertRowIndexToModel(tblMostruarios.getSelectedRow());
            Mostruario mostruario = new Mostruario();
            mostruario = (getModel().getMostruario(modelRow));     
            if (mostruario.getStatus()==0)
                new FrmFecharMostruario(null, true, mostruario, "Fechar Mostruário").setVisible(true);
            else
                JOptionPane.showMessageDialog(null, "O mostruário selecionado já está fechado."); 
        }
        else
            JOptionPane.showMessageDialog(null, "Nenhuma linha foi selecionada."); 
    }//GEN-LAST:event_btnFecharPedidoActionPerformed

    
    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (tblMostruarios.getSelectedColumn()!=-1&&tblMostruarios.getSelectedRow()!=-1){
            int modelRow = tblMostruarios.convertRowIndexToModel(tblMostruarios.getSelectedRow());
            Mostruario mostruario = new Mostruario();
            mostruario = (getModel().getMostruario(modelRow));     
            if (mostruario.getStatus()==0) {
                if (JOptionPane.showConfirmDialog(null, "Confirmar exclusão do mostruario "+mostruario.getId()+"?")==JOptionPane.YES_OPTION){
                    try {
                        ManterMostruarioController.getInstance().excluirMostruario(mostruario);
                    } catch (Exception e){
                        JOptionPane.showMessageDialog(null, "Erro ao excluir mostruário");
                    }
                }
            }
            else
                JOptionPane.showMessageDialog(null, "Não é possível excluir um mostruário fechado."); 
        }
        else
            JOptionPane.showMessageDialog(null, "Nenhuma linha foi selecionada."); 
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        String text = txtFiltro.getText();
        if (text.length() == 0) {
          sorter.setRowFilter(null);
        } else {
          sorter.setRowFilter(RowFilter.regexFilter("(?i)"+text));
        }
    }//GEN-LAST:event_txtFiltroKeyReleased

    private void tblMostruariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMostruariosMouseClicked
        if (evt.getClickCount() > 1) {
            exibirDetalhes();
        }
    }//GEN-LAST:event_tblMostruariosMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDetalhes;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFecharPedido;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnRomaneio;
    private javax.swing.JCheckBox ckExibirTudo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTitleMostruario;
    private javax.swing.JTable tblMostruarios;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        addMostruarios();
    }
    
    protected TableCellRenderer createStatusColumnRenderer() {
        return new StatusColumnRenderer();
    }
    
    protected static class StatusColumnRenderer extends DefaultTableCellRenderer {
            public Component getTableCellRendererComponent(JTable table,
                                                           Object value,
                                                           boolean isSelected,
                                                           boolean hasFocus,
                                                           int row,
                                                           int column) {

            super.getTableCellRendererComponent(table, value, isSelected,
                                                hasFocus, row, column);

            setText("");
            setHorizontalAlignment(SwingConstants.CENTER);

            /* set the icon based on the passed status */
            String str;
            str = (String)value;

            if (str.equals("Aberto"))
                setIcon(aberto);
            else if (str.equals("Concluido"))
                setIcon(concluido);
            else if (str.equals("Pendente"))
                setIcon(pendente);
            else
                setIcon(atrasado);

            return this;
        }
    } 
    
}
