/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmEstoque.java
 *
 * Created on Sep 10, 2011, 3:32:24 PM
 */
package view;

import controller.ManterEstoqueController;
import controller.ManterFornecedorController;
import controller.ManterMostruarioController;
import controller.ManterProdutoController;
import controller.ManterTipoProdutoController;
import java.sql.SQLException;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;
import model.Produto;
import tablemodel.EstoqueTableModel;
import tablemodel.FornecedorTableModel;

/**
 *
 * @author Vitor Freitas
 */
public class FrmPanelEstoque extends javax.swing.JPanel implements Observer{
    private EstoqueTableModel model;
    private int order;
    private int[] contador;
    
    private TableRowSorter<EstoqueTableModel> sorter;

    /** Creates new form frmEstoque */
    public FrmPanelEstoque() {
        initComponents();
        ManterEstoqueController.getInstance().addObserver(this);
        ManterMostruarioController.getInstance().addObserver(this);
        ManterProdutoController.getInstance().addObserver(this);
        ManterFornecedorController.getInstance().addObserver(this);
        ManterTipoProdutoController.getInstance().addObserver(this);
        
        tblEstoque.setRowHeight(20);
        
        JTableHeader header = tblEstoque.getTableHeader();
        
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblEstoqueHeaderMouseReleased(evt);
            }
        });
        
        contador = new int[9];
        
        for (int i=0;i<=8;i++){
            contador[i] = 0;
        }
        
        sorter = new TableRowSorter<EstoqueTableModel>(model);
        tblEstoque.setRowSorter(sorter);
    }
    
    
    private void addProduto(Produto produto) throws Exception{
        getModel().addProduto(produto);
    }
    
    private void addProdutos(){
        try{
            getModel().limpar();
            getModel().addListaDeProdutos(ManterEstoqueController.getInstance().getEstoque());
        } catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }
    

    private void addProdutos(int order, int orientacao){
        try{
            getModel().limpar();
            getModel().addListaDeProdutos(ManterEstoqueController.getInstance().getEstoque(order, orientacao));
        } catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }    
    
    private JTable getTblEstoque() {
            if (tblEstoque == null) {
                    tblEstoque = new JTable();
                    tblEstoque.setModel(new FornecedorTableModel());
            }
            return tblEstoque;
    }

    private EstoqueTableModel getModel() {
            if (model == null) {
                    model = (EstoqueTableModel) getTblEstoque().getModel();
            }
            return model;
    }    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        lbTitleEstoque = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEstoque = new javax.swing.JTable();
        btnEntradaEstoque = new javax.swing.JButton();
        btnSaidaEstoque = new javax.swing.JButton();
        btnHistorico = new javax.swing.JButton();
        btnEtiquetas = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        txtFiltro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        lbTitleEstoque.setFont(new java.awt.Font("Tahoma", 1, 18));
        lbTitleEstoque.setForeground(new java.awt.Color(51, 51, 51));
        lbTitleEstoque.setText("Estoque");

        tblEstoque.setModel(new EstoqueTableModel());
        addProdutos(0,0);
        jScrollPane1.setViewportView(tblEstoque);

        btnEntradaEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow_in.png"))); // NOI18N
        btnEntradaEstoque.setText("Entrada");
        btnEntradaEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntradaEstoqueActionPerformed(evt);
            }
        });

        btnSaidaEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow_out.png"))); // NOI18N
        btnSaidaEstoque.setText("Saída");
        btnSaidaEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaidaEstoqueActionPerformed(evt);
            }
        });

        btnHistorico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/report.png"))); // NOI18N
        btnHistorico.setText("Histórico");
        btnHistorico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoricoActionPerformed(evt);
            }
        });

        btnEtiquetas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/tag_blue.png"))); // NOI18N
        btnEtiquetas.setText("Etiquetas");
        btnEtiquetas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEtiquetasActionPerformed(evt);
            }
        });

        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/find.png"))); // NOI18N
        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });

        jLabel1.setText("Filtro:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbTitleEstoque)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                .addComponent(btnEtiquetas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnHistorico)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnConsultar))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFiltro, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSaidaEstoque)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEntradaEstoque)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTitleEstoque)
                    .addComponent(btnEntradaEstoque)
                    .addComponent(btnSaidaEstoque)
                    .addComponent(btnHistorico)
                    .addComponent(btnEtiquetas)
                    .addComponent(btnConsultar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblEstoqueHeaderMouseReleased(java.awt.event.MouseEvent evt){
        /*TableColumnModel colModel = tblEstoque.getColumnModel();
        int columnModelIndex = colModel.getColumnIndexAtX(evt.getX());
        order = colModel.getColumn(columnModelIndex).getModelIndex();
        
        contador[order]++;
        
        try {
            addProdutos(order, (contador[order]%2));
        } catch (Exception e){
            JOptionPane.showMessageDialog(btnConsultar, e.getMessage());
        }*/
        
    }
    
    private void btnEntradaEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntradaEstoqueActionPerformed
        new FrmEntradaEstoque(null, true).setVisible(true);
    }//GEN-LAST:event_btnEntradaEstoqueActionPerformed

    private void btnSaidaEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaidaEstoqueActionPerformed
        try {
            if (tblEstoque.getSelectedColumn()!=-1&&tblEstoque.getSelectedRow()!=-1){
                int modelRow = tblEstoque.convertRowIndexToModel(tblEstoque.getSelectedRow());
                Produto produto = new Produto();
                produto = (getModel().getProduto(modelRow));
                if (produto.getQtdEstoque()==0)
                    throw new Exception("Não existe "+produto.getNome()+" em estoque para ser removido.");
                
                new FrmSaidaEstoque(null, true, produto).setVisible(true);
            }
            else
                throw new Exception("Nenhuma linha foi selecionada.");
                
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());                    
        }
    }//GEN-LAST:event_btnSaidaEstoqueActionPerformed

    private void btnHistoricoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoricoActionPerformed
        new FrmHistoricoEstoque(null, true).setVisible(true);
    }//GEN-LAST:event_btnHistoricoActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        if (tblEstoque.getSelectedColumn()!=-1&&tblEstoque.getSelectedRow()!=-1){
            int modelRow = tblEstoque.convertRowIndexToModel(tblEstoque.getSelectedRow());
            Produto produto = new Produto();
            produto = (getModel().getProduto(modelRow));
            if (produto.getQtdConsignado()==0)
                JOptionPane.showMessageDialog(null, "Não existe "+produto.getNome()+" consignado para consulta.");
            else
                new FrmConsultarProdutoConsignado(null, true, produto).setVisible(true);
        }
        else
            JOptionPane.showMessageDialog(null, "Nenhuma linha foi selecionada.");
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnEtiquetasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEtiquetasActionPerformed
        if (tblEstoque.getSelectedColumn()!=-1&&tblEstoque.getSelectedRow()!=-1){            
            int modelRow = tblEstoque.convertRowIndexToModel(tblEstoque.getSelectedRow());
            Produto produto = new Produto();
            produto = (getModel().getProduto(modelRow));
            new FrmImprimirEtiqueta(null, true, produto).setVisible(true);
        }
        else
            new FrmImprimirEtiqueta(null, true, null).setVisible(true);
    }//GEN-LAST:event_btnEtiquetasActionPerformed

    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        String text = txtFiltro.getText();
        if (text.length() == 0) {
          sorter.setRowFilter(null);
        } else {
          sorter.setRowFilter(RowFilter.regexFilter("(?i)"+text));
        }
    }//GEN-LAST:event_txtFiltroKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnEntradaEstoque;
    private javax.swing.JButton btnEtiquetas;
    private javax.swing.JButton btnHistorico;
    private javax.swing.JButton btnSaidaEstoque;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTitleEstoque;
    private javax.swing.JTable tblEstoque;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        addProdutos(order, (contador[order]%2));
    }
}