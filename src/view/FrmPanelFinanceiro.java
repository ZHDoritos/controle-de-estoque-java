/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmPanelFinanceiro.java
 *
 * Created on Aug 11, 2012, 5:41:29 PM
 */
package view;

import controller.FinanceiroController;
import controller.ManterMostruarioController;
import java.awt.Component;
import java.sql.SQLException;
import java.util.Observable;
import java.util.Observer;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;
import model.Mostruario;
import model.PagamentoMostruario;
import tablemodel.FinanceiroTableModel;

/**
 *
 * @author Vitor
 */
public class FrmPanelFinanceiro extends javax.swing.JPanel implements Observer{
    FinanceiroTableModel model;
    /** Creates new form FrmPanelFinanceiro */
    public FrmPanelFinanceiro() {
        initComponents();
        ManterMostruarioController.getInstance().addObserver(this);
        tblFinanceiro.setRowHeight(20);
        tblFinanceiro.getColumn("Status").setCellRenderer(createStatusColumnRenderer());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitleFinanceiro = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFinanceiro = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        lbTitleFinanceiro.setFont(new java.awt.Font("Tahoma", 1, 18));
        lbTitleFinanceiro.setForeground(new java.awt.Color(51, 51, 51));
        lbTitleFinanceiro.setText("Financeiro");

        tblFinanceiro.setModel(new FinanceiroTableModel());
        addPagamentos();
        tblFinanceiro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFinanceiroMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblFinanceiro);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bullet_red.png"))); // NOI18N
        jLabel1.setText("Vencido");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bullet_yellow.png"))); // NOI18N
        jLabel2.setText("Vencendo Hoje");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bullet_green.png"))); // NOI18N
        jLabel3.setText("A Vencer");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                    .addComponent(lbTitleFinanceiro)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitleFinanceiro)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblFinanceiroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFinanceiroMouseClicked
        if (evt.getClickCount() > 1) {
            if (tblFinanceiro.getSelectedColumn()!=-1&&tblFinanceiro.getSelectedRow()!=-1){
                int modelRow = tblFinanceiro.convertRowIndexToModel(tblFinanceiro.getSelectedRow());
                int id = (Integer) getModel().getValueAt(tblFinanceiro.getSelectedRow(), 0);
                Mostruario mostruario = new Mostruario();
                try {
                    mostruario = (ManterMostruarioController.getInstance().getMostruario(id));     
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erro ao recuperar Mostruário");
                }
                new FrmFecharMostruario(null, true, mostruario, "Detalhes Mostruário").setVisible(true);
            }
        }
    }//GEN-LAST:event_tblFinanceiroMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTitleFinanceiro;
    private javax.swing.JTable tblFinanceiro;
    // End of variables declaration//GEN-END:variables

    private void addPagamentos(){
        try{
            getModel().limpar();
            getModel().addListaPagamentos(FinanceiroController.getInstance().getListaPagamentosEmAberto());
        } catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch(ClassNotFoundException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
    
    private JTable getTblFinanceiro() {
            if (tblFinanceiro == null) {
                    tblFinanceiro = new JTable();
                    tblFinanceiro.setModel(new FinanceiroTableModel());
            }
            return tblFinanceiro;
    }

    private FinanceiroTableModel getModel() {
            if (model == null) {
                    model = (FinanceiroTableModel) getTblFinanceiro().getModel();
            }
            return model;
    }     
    
    @Override
    public void update(Observable o, Object arg) {
        addPagamentos();
    }
    
    
    protected TableCellRenderer createStatusColumnRenderer() {
        return new StatusColumnRenderer();
    }
    
    protected static class StatusColumnRenderer extends DefaultTableCellRenderer {
        
            private static final ImageIcon aberto
                = new ImageIcon(FrmPanelMostruario.class.getResource("/images/bullet_green.png"));
            private static final ImageIcon hoje
                = new ImageIcon(FrmPanelMostruario.class.getResource("/images/bullet_yellow.png"));     
            private static final ImageIcon vencido
                = new ImageIcon(FrmPanelMostruario.class.getResource("/images/bullet_red.png"));  
    
            public Component getTableCellRendererComponent(JTable table,
                                                           Object value,
                                                           boolean isSelected,
                                                           boolean hasFocus,
                                                           int row,
                                                           int column) {

            super.getTableCellRendererComponent(table, value, isSelected,
                                                hasFocus, row, column);

            setText("");
            setHorizontalAlignment(SwingConstants.CENTER);

            /* set the icon based on the passed status */
            String str;
            str = (String)value;

            if (str.equals("Aberto"))
                setIcon(aberto);
            else if (str.equals("Hoje"))
                setIcon(hoje);
            else if (str.equals("Vencido"))
                setIcon(vencido);

            return this;
        }
    }     
        
}
